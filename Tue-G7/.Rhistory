library(shiny); runApp('C:/Users/zyjxx/Desktop/M2/Stat628-Module2-master/shiny/shiny_business.R')
runApp()
review=read.csv("reviews.csv")[,-1]
head(review)
runApp()
att=read.csv("att_data_clean.csv")
att
att=read.csv("att_data_clean.csv")[,-1]
att
head(att[,1:40])
head(att[,1:40][,c(-2,-3)])
runApp()
head(review)
testid='1Dfx3zM-rW4n-31KeC8sJg'
runApp()
head(att[,1:40])
review[,1:40][,c(-2,-7)]
review[,1:40]
att[,1:40][,c(-2,-7)]
att_par=att[,1:40][,c(-2,-7)]
att_model=lm(att_par$stars~.)
att_model=lm(stars~.,data = att_par)
att_model
att_par
att_par=att[,1:40][,c(-1,-2,-7)]
att_par
att_model=lm(att_par$stars~.)
att_model=lm(stars~.,data=att_par)
summary(att_model)
s=summary(att_model)
s$fstatistic
s$coefficients
s[s$coefficients[,-4]<0.05,]
s[s$coefficients[,4]<0.05,]
s$coefficients[,4]
s$coefficients[,4]<0.05
s[s$coefficients[,4]<0.05]
s$coefficients
class(s$coefficients)
coef = s$coefficients
coef[1,2]
coef[,4]
s[s$coefficients[,4]<0.05,]
s[s$coefficients[,4]<0.05,]
coef[coef[,4]<0.05,]
co_mat=s$coefficients[s$coefficients[,4]<0.05,]
co_mat
co_mat=s$coefficients[s$coefficients[,4]<0.05,][,-3]
co_mat
co_mat=s$coefficients[s$coefficients[,4]<0.05,][,c(-3,-4)]
co_mat
att_par
att_categories=c("intimate","hipster","divey","trendy","dessert","latenight","dinner","brunch","GoodForKids","Caters","NoiseLevel","RestaurantsTableService","RestaurantsPriceRange","OutdoorSeating","HasTVTrue","WiFi","Alcohol","RestaurantsDeliveryTrue","BusinessAcceptsCreditCards","WheelchairAccessible","park")
att_par
att_par[1,5]
class(att_par[1,5])
as.character(att_par[,5:ncol(att_par)])
for (i in 5:ncol(att_par)){
att_par[,i]=as.character(att_par[,i])
}
att_par
co_mat
co_mat[,1]
co_mat$roe.name
rownames(co_mat)
posi = rownames[co_mat$Estimate>0]
posi = rownames[co_mat[,1]>0]
posi = rownames(co_mat)[co_mat[,1]]>0
rownames(co_mat)
posi = rownames(co_mat)[co_mat[,1]>0]
posi
nega = rownames(co_mat)[co_mat[,1]<0]
nega
runApp()
step(att_model)
att_model_new=lm(stars ~ latitude + longitude + review_count + intimate +
hipster + divey + touristy + trendy + dessert + latenight +
dinner + brunch + GoodForKids + Caters + NoiseLevel + RestaurantsTableService +
RestaurantsPriceRange2 + OutdoorSeating + BikeParking + HasTV +
WiFi + Alcohol + RestaurantsDelivery + BusinessAcceptsCreditCards +
WheelchairAccessible + park, data = att_par)
summary(att_model_new)
att_model_new=lm(stars ~ latitude + longitude + review_count + intimate +
+ hipster + divey + touristy + trendy + dessert + latenight +
+ dinner + brunch + GoodForKids + Caters + NoiseLevel + RestaurantsTableService +
+ RestaurantsPriceRange2 + OutdoorSeating + BikeParking + HasTV +
+ WiFi + Alcohol + RestaurantsDelivery + BusinessAcceptsCreditCards +
+ WheelchairAccessible + park, data = att_par)
co_mat=s$coefficients[s$coefficients[,4]<0.05,][,c(-3,-4)]
posi = co_mat[[co_mat[,1]>0],]
co_mat[,1]
posi = co_mat[co_mat[,1]>0,]
posi
s=summary(att_model)
co_mat=s$coefficients[s$coefficients[,4]<0.05,][,1]
posi = co_mat[co_mat[,1]>0,]
posi = co_mat[co_mat[,1]>0]
co_mat
posi = co_mat[co_mat>0]
posi
names(posi)
runApp()
nrow(co_mat)
s=summary(att_model)
co_mat=s$coefficients[s$coefficients[,4]<0.05,][,1]
nrow(co_mat)
length(co_mat)
# Define UI for application that draws a histogram
ui <- fluidPage(
headerPanel('Suggestions for Business Owners'),
sidebarPanel(
textInput(inputId = 'Business', label =  'Business ID'),
helpText("Please input your business ID."),
submitButton("Submit")
),
mainPanel(
tabsetPanel(
tabPanel("about",
h4(textOutput("about1")),
h4(textOutput("about2"))
),
tabPanel("suggestions based on attribute",
h5(textOutput("att1")),
h5(textOutput("att2"))
h5(textOutput("att1"))
h5(textOutput("att1"))
h5(textOutput("att1"))
),
tabPanel("positive parts in reviews",
DT::dataTableOutput("pos_review")
),
tabPanel("negative parts in reviews",
DT::dataTableOutput("neg_review")
)
)
)
)
h5(textOutput("att1"))# Define server logic required to draw a histogram
# Define UI for application that draws a histogram
ui <- fluidPage(
headerPanel('Suggestions for Business Owners'),
sidebarPanel(
textInput(inputId = 'Business', label =  'Business ID'),
helpText("Please input your business ID."),
submitButton("Submit")
),
mainPanel(
tabsetPanel(
tabPanel("about",
h4(textOutput("about1")),
h4(textOutput("about2"))
),
tabPanel("suggestions based on attribute",
h5(textOutput("att1")),
h5(textOutput("att2"))
h5(textOutput("att1"))
h5(textOutput("att1"))
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
),
tabPanel("positive parts in reviews",
DT::dataTableOutput("pos_review")
),
tabPanel("negative parts in reviews",
DT::dataTableOutput("neg_review")
)
)
)
)
# Define UI for application that draws a histogram
ui <- fluidPage(
headerPanel('Suggestions for Business Owners'),
sidebarPanel(
textInput(inputId = 'Business', label =  'Business ID'),
helpText("Please input your business ID."),
submitButton("Submit")
),
mainPanel(
tabsetPanel(
tabPanel("about",
h4(textOutput("about1")),
h4(textOutput("about2"))
),
tabPanel("suggestions based on attribute",
h5(textOutput("att1")),
h5(textOutput("att2"))
h5(textOutput("att1"))
h5(textOutput("att1"))
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
h5(textOutput("att1")),
),
tabPanel("positive parts in reviews",
DT::dataTableOutput("pos_review")
),
tabPanel("negative parts in reviews",
DT::dataTableOutput("neg_review")
)
)
)
)
# Define UI for application that draws a histogram
ui <- fluidPage(
headerPanel('Suggestions for Business Owners'),
sidebarPanel(
textInput(inputId = 'Business', label =  'Business ID'),
helpText("Please input your business ID."),
submitButton("Submit")
),
mainPanel(
tabsetPanel(
tabPanel("about",
h4(textOutput("about1")),
h4(textOutput("about2"))
),
tabPanel("suggestions based on attribute",
h5(textOutput("att1")),
h5(textOutput("att2")),
h5(textOutput("att3")),
h5(textOutput("att4")),
h5(textOutput("att5")),
h5(textOutput("att6")),
h5(textOutput("att7")),
h5(textOutput("att8")),
h5(textOutput("att9")),
h5(textOutput("att10")),
h5(textOutput("att11")),
h5(textOutput("att12")),
h5(textOutput("att13")),
h5(textOutput("att14")),
h5(textOutput("att14")),
h5(textOutput("att14")),
h5(textOutput("att14")),
h5(textOutput("att14")),
),
tabPanel("positive parts in reviews",
DT::dataTableOutput("pos_review")
),
tabPanel("negative parts in reviews",
DT::dataTableOutput("neg_review")
)
)
)
)
co_mat
?renderText
test=function(i){
a=as.character(i)
return(a)
}
test(5)
runApp()
runApp()
runApp()
co_mat
business_summary=att_par$intimate[review$business_id==test_id]
business_summary=att_par$intimate[review$business_id==testid]
business_summary
write.csv(co_mat,"attributes.csv")
s$coefficients[s$coefficients[,4]<0.05,]
runApp('C:/Users/zyjxx/Desktop/M2/Stat628-Module2-master/shiny/shiny_business.R')
runApp()
business_summary=att_par$NoiseLevel[att_par$business_id==testid]
business_summary
att_par
review=read.csv("reviews.csv")[,-1]
att=read.csv("att_data_clean.csv")[,-1]
att_par=att[,1:40][,c(-2,-7)]
business_summary=att_par$NoiseLevel[att_par$business_id==testid]
business_summary
for (i in 5:ncol(att_par)){
att_par[,i]=as.character(att_par[,i])
}
for (i in 1:ncol(att_par)){
att_par[,i]=as.character(att_par[,i])
}
business_summary
business_summary=att_par$NoiseLevel[att_par$business_id==testid]
business_summary
business_summary=='quiet'
business_summary=att_par$Caters[att_par$business_id==testid]
business_summary
business_summary=='False'
business_summary=att_par$NoiseLevel[att_par$business_id==testid]
class(business_summary)
business_summary
business_summary=="'quiet'"
runApp()
testid
runApp()
att_par$park[att_par$business_id==testid]
runApp()
att_par
att
runApp()
runApp()
runApp()
runApp()
runApp()
att2=function(business_id){
business_summary=att_par$dessert[att_par$business_id==business_id]
if (business_summary == 'False'){
return("Dessert: Please provide food that are good for desserts. Your estimated rating will increase by 0.16 by doing this.")
}else{
return("Dessert: There's no need to make a change here.")
}
}
att3=function(business_id){
business_summary=att_par$latenight[att_par$business_id==business_id]
if (business_summary == 'False'){
return("Latenight Meal: There's no need to make a change here.")
}else{
return("Latenight Meal: It is unnecessary to improve your performance on latenight meal.")
}
}
x=c(att2,att3)
for (i in x){}
x(testid)
i(testid)
View(i)
x=c(att2(),att3())
runApp()
runApp()
runApp()
runApp()
att_par$BusinessAcceptsCreditCards=='False'
sum(att_par$BusinessAcceptsCreditCards=='False')
runApp()
att_par$NoiseLevel=="'quiet'" & att_par$WheelchairAccessible=="False"
att_par[601,]
runApp()
sum(att_par$WheelchairAccessible=="False")
runApp()
runApp()
runApp()
runApp()
